cmake_minimum_required(VERSION 3.16)
project(Robocar)

set(CMAKE_CXX_STANDARD 14)
include_directories(src)
include_directories(test)
include_directories(lib)
include_directories(ArduinoCore-avr/cores/arduino)
#include_directories(mock)

# Все тесты (входные точки)
add_executable(CarTest1 test/car/test_1.cpp)
add_executable(TestChassis test/car/test_chasssis.cpp)
add_executable(TestTachometr test/car/test_tachometr.cpp)
add_executable(MPU6050 src/cmd/mpu_6050.cpp)

set(TESTS_TARGETS CarTest1 TestChassis TestTachometr)

add_subdirectory(mock/ArduinoFake)
add_subdirectory(src/car)
add_subdirectory(src/modules)
add_subdirectory(lib/Vector)
add_subdirectory(lib/avr)
add_subdirectory(mock/leOS2Mock)

# Write down all test targets
set(LIB_LIST ArduinoFake unity CarModules Modules Vector)
foreach(target ${TESTS_TARGETS})
    target_compile_definitions(${target} PUBLIC UNIT_TEST)
    target_link_libraries(${target} PUBLIC ${LIB_LIST})
endforeach()

target_link_libraries(CarTest1 PUBLIC LeOS2Mock)

link_libraries(arduino_core)
add_custom_target(
        LibsUpdate
        COMMAND platformio lib update
        WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
)
add_compile_definitions(ARDUINO=100 UBRRH)
if(TARGET LibsUpdate)
#    target_link_directories(LibsUpdate PUBLIC ArduinoCore-avr/cores)
    include_directories(ArduinoCore-avr/cores/arduino)
endif()